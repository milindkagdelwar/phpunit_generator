{% extends "base/class.php.twig" %}

{% block namespace_class %}
    namespace Drupal\Tests\{% if module %}{{ module }}{% else %}module_name{% endif %}\Functional;
{% endblock %}

{% block use_class %}
    use Drupal\Tests\BrowserTestBase;
    use Drupal\node\Entity\Node;
    use Drupal\Core\DrupalKernel;
    use Symfony\Component\HttpFoundation\Request;
{% endblock %}

{% block class_declaration %}
    /**
    * Simple test to ensure node creation when enabled.
    *
    * @group {{ module }}
    */
    class {{ content_type_class }}NodeCreateTest extends BrowserTestBase {% endblock %}
{% block class_methods %}
/**
* Modules to enable.
*
* @var array
*/
public static $modules = ['{{ module }}'];

/**
* A user with permission to administer site configuration.
*
* @var \Drupal\user\UserInterface
*/
protected $user;

/**
* {@inheritdoc}
*/
protected function setUp() {
    // Lets rebuild container before running.
    $this->container = NULL;
    $this->setupBaseUrl();

    $this->root = static::getDrupalRoot();
    $this->classLoader = require $this->root . '/autoload.php';

    $request = Request::createFromGlobals();

    $this->kernel = DrupalKernel::createFromRequest($request, $this->classLoader, 'prod');
    chdir(DRUPAL_ROOT);

    $this->kernel->prepareLegacyRequest($request);
    $this->rebuildAll();
    $this->user = $this->drupalCreateUser(['create {{ content_type }} content', 'edit own {{ content_type }} content']);
    $this->drupalLogin($this->user);
}

/**
* Tests node create functionality for content type.
*/
public function testNodeCreate() {

    // Create a product details node for testing.
    $node = Node::create([
    'uid' => $this->user->id(),
    'type' => '{{ content_type }}',
    'title' => t('Demo Node Test' . $this->randomMachineName(8)),
    'body' => t('Test Body'),
    ]);

    $node->save();
    $node = $this->drupalGetNodeByTitle($node->label());
    $this->assertTrue($node, 'Demo Node Test node created.');

    }
    {% endblock %}
